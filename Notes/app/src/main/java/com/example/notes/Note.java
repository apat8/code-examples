package com.example.notes;

import java.io.Serializable;
import java.util.Date;

import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.PrimaryKey;


/**
 * Note stores all the notes the user adds.
 *
 * A note consists of an ID that is autogenerated, the title of the note, the body of the note,
 * the category the note is part of, the last edited date, and the order number that is used to
 * identify the order in which the notes are displayed.
 *
 * Foreign Key constraint is that the category set must be one from the Category table.
 *
 * |ID|Title|Body|Category|LastEdited|OrderNum|
*/

@Entity(foreignKeys = @ForeignKey(entity = Category.class,
        parentColumns = "Name",
        childColumns = "Category"))
public class Note implements Serializable {
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "ID")
    private long mID;
    @ColumnInfo(name = "Title")
    private String mTitle;
    @ColumnInfo(name = "Body")
    private String mBody;
    @ColumnInfo(name = "Category")
    private String mCategory;
    @ColumnInfo(name = "LastEdited")
    private Date mLastEdited;
    @ColumnInfo(name = "OrderNum")
    private int mOrderNum;


    public Note(){
        this.mTitle = "";
        this.mBody = "";
        this.mCategory = "NONE";
        this.mLastEdited = new Date();
    }

    // Getters
    public long getID(){
        return mID;
    }
    public String getTitle(){
        return this.mTitle;
    }
    public String getBody(){
        return this.mBody;
    }
    public String getCategory(){
        return this.mCategory;
    }
    public Date getLastEdited(){
        return this.mLastEdited;
    }
    public int getOrderNum(){
        return this.mOrderNum;
    }

    // Setters
    public void setID(long id){
        this.mID = id;
    }
    public void setTitle(String title){
        this.mTitle = title;
    }
    public void setBody(String body){
        this.mBody = body;
    }
    public void setCategory(String category){
        this.mCategory = category;
    }
    public void setLastEdited(Date date){
        this.mLastEdited = date;
    }
    public void setOrderNum(int orderNum){
        this.mOrderNum = orderNum;
    }

    /**
     * Check if two notes are equal.
     * When ID's are the same then the notes are equal
     * @param obj Object to compare to
     * @return boolean indicating if objects are equal
     */
    @Override
    public boolean equals(@Nullable Object obj) {
        boolean isEqual = false;
        if(obj instanceof Note){
            Note note = (Note)obj;
            isEqual = note.getID() == this.mID;
        }
        return isEqual;
    }

    /**
     *  Hash used when using hash data structures
     *  When ID's are the same, objects are equal
     * @return hash
     */
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 17 * hash + ((Long)this.mID).hashCode();
        return hash;
    }
}
